#!/usr/bin/env python
import sys
import collections

class CaseInsensitiveDict(collections.Mapping):
    def __init__(self, d):
        self._d = d
        self._s = dict((k.lower(), k) for k in d)
    def __contains__(self, k):
        return k.lower() in self._s
    def __len__(self):
        return len(self._s)
    def __iter__(self):
        return iter(self._s)
    def __getitem__(self, k):
        return self._d[self._s[k.lower()]]
    def actual_key_case(self, k):
        return self._s.get(k.lower())


def search(values, searchFor):
    for k in values:
        for v in values[k]:
            if searchFor in v:
                return k
    return None

ports = {1    : "TCPMUX",
         5    : "Remote Job Registry",
         7    : "Echo Protocol",
         9    : "Wake on Lan (WOL)",
         13   : "Daytime Protocol",
         21   : "File Transfer Protocol (FTP)",
         22   : "Secure Shell (SSH)",
         23   : "Telnet",
         53   : "Domain Name Services (DNS)",
         3389 : "Microsoft Terminal Server (RDP)"}
         


args = sys.argv[1:]


if args[0].isdigit():
    port = int(args[0])
    if port in ports:
        print ports[port]
    else:
        print "Port not found"

else:
    protocol = args[0]
    print protocol
    print CaseInsensitiveDict(ports, protocol)
    
